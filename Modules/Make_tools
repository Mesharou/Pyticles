# Compilation of R_tools using f2py
# According to your machine you may have to change the include PATH
# Appropriate PATH may be found using command:
# 	$ echo | gcc -E -Wp,-v -
#


# compiler
     FC = f2py
    CXX = cpp

# compile flags
# FCFLAGS = -DF2PY_REPORT_ON_ARRAY_COPY=1 -c --fcompiler=intelem --compiler=intelem
#FCFLAGS = -c --fcompiler=intelem --compiler=intelem  --f90flags="-g -check all -CA -CB -CS"
#FCFLAGS = -I/usr/include/x86_64-linux-gnu -c --fcompiler=intelem --compiler=intelem --f90flags="-extend_source -O1 -g -check all -CA -CB -CS"
#FCFLAGS = -I/usr/include/x86_64-linux-gnu --debug-capi -c --f90flags="-g -check all -CA -CB -CS"
#FCFLAGS = -I/usr/include/x86_64-linux-gnu -DF2PY_REPORT_ON_ARRAY_COPY=1 -c --f90flags="-g -check all -CA -CB -CS"
FCFLAGS = -I/usr/include/x86_64-linux-gnu -c --f90flags="-g -check all -CA -CB -CS"
FCFLAGS_DATARMOR = -I/appli/gcc/gcc-9.1.0__8.3.0/include/ -c --f90flags="-g -check all -CA -CB -CS"
FCFLAGS_DMPT = -I/appli/NETCDF/4.3.3.1-mpt-intel/include -c --f90flags="-g -check all -CA -CB -CS"


# source files and objects
SRCS = R_tools_fort.F
RCS = $(SRCS:.F=.f)
SRCSG = R_tools_fort_gula.F
RCSG = $(SRCSG:.F=.f)
SRCSC = R_tools_fort_cuc.F
RCSC = $(SRCSC:.F=.f)
SRCSP = pyticles_3d_sig_sa.F
RCSP = $(SRCSP:.F=.f)

# program name
PROGRAM = R_tools_fort
PROGRAMG = R_tools_fort_gula
PROGRAMC = R_tools_fort_cuc
PROGRAMP = pyticles_3d_sig_sa

R_tools: $(RCS)
	$(CXX) $(SRCS) $(RCS)
	$(FC) $(FCFLAGS) -m $(PROGRAM) $(RCS)

R_tools_DATARMOR: $(RCS)
	$(CXX) $(SRCS) $(RCS)
	$(FC) $(FCFLAGS_D) -m $(PROGRAM) $(RCS)

R_tools_DMPT: $(RCS)
	$(CXX) $(SRCS) $(RCS)
	$(FC) $(FCFLAGS_DMPT) -m $(PROGRAM) $(RCS)

all: $(RCS)
	$(CXX) $(SRCS) $(RCS)
	$(CXX) $(SRCSG) $(RCSG)
	$(CXX) $(SRCSC) $(RCSC)
	$(FC) $(FCFLAGS) -m $(PROGRAM) $(RCS)
	$(FC) $(FCFLAGS) -m $(PROGRAMG) $(RCSG)
	$(FC) $(FCFLAGS) -m $(PROGRAMC) $(RCSC)

particles: $(RCSP)
	$(CXX) $(SRCSP) $(RCSP)
	$(FC) $(FCFLAGS) -m $(PROGRAMP) $(RCSP)

clean:
	rm -f *.f *.so  *.o *.mod

